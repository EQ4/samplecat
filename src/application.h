/* application.h generated by valac 0.12.1, the Vala compiler, do not modify */


#ifndef __APPLICATION_H__
#define __APPLICATION_H__

#include <glib.h>
#include <glib-object.h>

G_BEGIN_DECLS


#define TYPE_APPLICATION (application_get_type ())
#define APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_APPLICATION, Application))
#define APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_APPLICATION, ApplicationClass))
#define IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_APPLICATION))
#define IS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_APPLICATION))
#define APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_APPLICATION, ApplicationClass))

typedef struct _Application Application;
typedef struct _ApplicationClass ApplicationClass;
typedef struct _ApplicationPrivate ApplicationPrivate;

struct _Application {
	GObject parent_instance;
	ApplicationPrivate * priv;
	gint state;
	gchar* cache_dir;
};

struct _ApplicationClass {
	GObjectClass parent_class;
};


GType application_get_type (void) G_GNUC_CONST;
Application* application_new (void);
Application* application_construct (GType object_type);
void application_emit_icon_theme_changed (Application* self, const gchar* s);


G_END_DECLS

#endif
